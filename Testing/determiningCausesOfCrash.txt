Question:

You are given the source to an application which crashes when it runs. 
After running it 10 times in a debugger, you notice it doesn't crash in
the same place each time. The application is single threaded, and it only
uses the C standard library. What programming errors could be causing 
this crash? How would you test each one?

Answer:

From the basic info of the question these are the possibilities:

1. A random variable is used : could make something go out of range. 
Or it is a vairable that is seemingly random because it is never 
initialized.
2. User input : the program depends on user input and some inputs could 
cause it to crash
3. Memory leak : the memory may be constantly increasing because of a 
memory leak.

To test them:

First ask about use cases:
Who uses it?
How do they use it?
What kind of application?

1. See if rand is used in the program. Look for uninitialized data
2. Determine whether there is user input by running the program. If so, 
try inputting different things to see if that affects it.
3. Look at how much memory the application is consuming over the course
of its lifetime.